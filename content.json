{"meta":{"title":"法门扫地僧的一亩三分地的前端开发工程师H5开发HTML5CSSJavascript","subtitle":null,"description":null,"author":"扫地僧","url":"https://lzws0931.cn"},"pages":[{"title":"关于我","date":"2018-03-19T11:07:48.000Z","updated":"2018-03-21T16:35:35.038Z","comments":true,"path":"about/index.html","permalink":"https://lzws0931.cn/about/index.html","excerpt":"","text":"关于我我用了10年的网名和头像【法门扫地僧】嗯呢，我目前属于半个程序员，注意技术点是偏向前端开发，主要开发语言 前端洗剪吹，熟悉使用 HTML、CSS 和javascript等技术。对后端、前端、运营等技能有所了解。 热爱开源项目、热爱新技术、热爱新事物。 关于工作城市：长安 关于学习学海无涯，不要回头。 关于目标 减肥，挣钱，技术牛逼。 关于爱好没有什么嗜好，爱好也不是很广泛，有时候有点宅。 联系我 Email: 58267980@qq.com Blog: www.lzws0931.cn GitHub: 法门扫地僧 WeiBo: 法门扫地僧 博客园: 法门扫地僧"}],"posts":[{"title":"法门扫地僧简历经验分享","slug":"简历经验分享","date":"2018-09-13T14:35:09.000Z","updated":"2018-11-05T08:52:00.389Z","comments":true,"path":"2018/09/13/简历经验分享/","link":"","permalink":"https://lzws0931.cn/2018/09/13/简历经验分享/","excerpt":"","text":"Front-End前端开发工程师面试宝典！ （本文部分有转载，不定期更新！） 前言（README.md）12本仓库是我整理的前端常见面试题，大部分由我整理，其中个别部分参考网上其他资料，感谢！ 本资料仅供大家学习参考使用！欢迎大家Star和提交issues。 NO.1 READMENO.2 简历经验分享NO.3 angular常见问题NO.4 前端面试宝典第一版NO.5 前端笔记版本第二版NO.6 前端笔记版本第三版NO.7 前端笔记版本第四版NO.8 vue常见问题 欢迎大家一起交流提高简历经验分享1、简历的重要性找工作，难吗？并不难，但是简单吗？并不简单，因为面试，从你投递简历的那一刻已经开始了。面对日趋激烈的就业压力,准备就业的你，做好心理准备了吗？找工作之前，我想请问你一句话，如果你是一家公司，你会招聘你这样的人才吗？ 2、言简意赅面试，首先就是要有一个像样的简历，能拿的出手的简历，要让面试官知道你是谁，你来干什么，你能做什么，你能给我带来什么？这是最基本的，除此之外，简历是我们必不可少的，简历，简单的履历。不需要长篇大论，也不要一张纸敷衍了事。找工作！最开始竞争的就是简历！因为你到任何一个招聘单位要做的第一件事情就是要投递简历，而简历就是那些单位了解你的第一扇窗口。因此简历就成了你和单位沟通的第一通道，往往是招聘人员了解你的第一个途径，适度的引起用人单位对你的兴趣才是最重要的。一份好的简历，可以在众多求职简历中脱颖而出，给招聘人员留下深刻的印象，然后决定给你面试通知，它是帮助你应聘成功的敲门砖。 3、基本信息个人信息：根据不同情况，个人信息由必要和可选之分：必有信息：姓名、联系方式（手机、固定电话、Email、邮寄地址）。可选信息：性别、年龄、政治面貌、籍贯、民族、照片等。注意，自己根据自己需求进行填写，比如面试外企，就尽量不用写政治面貌，还有尽量写年龄，而不是写生日或者出生年月日，写年龄是为了面试官的体验，他直观的就能推测你多少岁大学毕业，几年经验，等等，还有手机号码采用344格式：132-1234-1234等等 4、教育经历 教育经历和工作经历还有项目经验一般按照时间逆序的写法来写，也就是说把最近的教育经历写在前面，比如你自考本科，那么把本科写在前面，当然，大专阶段可以写，也可以不写。如果要写的话，时间上需要衔接。最近的学历放在最前面，即如果你现在是即将硕士毕业，那么要先写硕士再写本科。大学以前高中阶段、初中阶段经历一般不写。 ​ 每段教育经历都应有起止日期的时间段，有助于让HR了解你的毕业日期或者看到你接受教育的成长轨迹。学校：便于HR能迅速识别你的学历，如果就读的是名校，校名可能对你应聘有所帮助，这种情况下，建议将学校校名加粗显示。如果你就读的是非名校，则可以不用加粗显示、专业：如果是应聘专业对口的职位，那么专业一定要加粗强调。若你是跨专业求职，有双学位或者有相关的辅修经历，那么辅修的专业要加粗强调。 ​ 如果你的学校是非名校，主专业也与职位要求不对口，且没有学习过相关的课程或者辅修经历，那么在这种严峻的教育硬伤下，你可能需要在简历中将教育背景往下调，弱化教育背景，转而强调其他与职位相关的实习经历或者社会实践经历。总而言之，应根据职位和自身情况做到突出优势，规避劣势。相关课程：不建议写，因为你学过和你会是两个概念，你可以把你的会的东西当做专业技能来展示。 5、工作经历工作经历：一般来说是简历的重点内容，如果有相关著名公司的话，那通过简历筛选的几率很大。因为相关的工作经历最能够体现与职位要求的技能。而对于应届毕业生来说，可以把自己的实习经历写上去，实习经历、兼职经历可以有效地弥补这一软肋。 工作经历一般就是说你在那家公司待了多长时间，什么岗位，你干了那些事情，或者说负责哪方面。 6、项目经验 项目经验：一般来说，项目经历往往反映的是求职者某个方面的实际动手能力、对某个领域或某种技能的掌握程度。一般在应聘IT类职位项目经历的描述是比较重要的。对于面试计算机的人来说，简历中项目的含义一般包含两个层面： （1）相关研究课题项目。课程设计，或者毕业论文都可以，或者你在大学期间实习做的项目都可以展示出来，如果自己做过的项目获得过奖项，那更好了，而毕业论文的内容中一般会有对应的研究背景、相关的调研、实验、数据统计及分析。做课题、写毕业论文的过程就是一个解决问题的过程，在这个过程中，我们必须学会获取大量信息、筛选有用信息，掌握分析问题、解决问题的方法，这样才能完成毕业论文。在这个过程中所锻炼的信息分析处理、某种软件的应用技能、书面表达等能力，也是你的求职砝码，可以在简历中呈现给HR。 而对于有些人没有太多的项目经验，那么你就应该把你自己自学或者做的项目适度的经历去阐述给面试官，面试中甚至可以带上自己的作品或者上次到github，展示给面试官也是很加分的，例如：在公司实习的经历中，曾经有过负责或参与公司某个项目的调研、立项或者实施，自己在项目中扮演着很重要的角色或者做了很重要的工作、贡献，那么可以单独将在这个公司实习的这段项目经历提取出来，重点描写，从而突出自己的相关技能水平。 7、自我评价自我评价，就是简单的夸夸自己，低调的告诉面试官，你很牛逼，但是要适度哦。 8、咋投递捏？招聘条件并非绝对限制，不要被招聘要求上面写到的专业，户口，工作经验或者211,985所吓到，和公司的规定条件不吻合还是有任用的机会的，有些东西往往只是一个限制标准而已，如果职业适性非常相合，也有丰富的经验，出线机会仍是非常浓厚。不管如何，如果你对该公司真的很有兴趣，不妨先试试看。 9、简历写作的原则：​ 1.关键词说话，HR平均浏览一份简历的时间不超过30秒，在这么短的时间内，HR主要是通过查看简历中是否有相关的关键词来进行判断。关键词的作用尤其在网申简历中更为明显。如果你是应聘互联网行业相关度的职位，HR可能会对简历中的“网站”、“流量”、“×××××.com”（网址域名）等关键词比较敏感； ​ 2.行为词说话，在描述过去经历的时候，无论是实习兼职经历还是工作经历，都需要把自己做的事情用清楚详细的、表示动作的词语（即行为词）叙述出来，形式上一般建议采用行为词开头的短句群。同样一段经历，是否掌握行为词的描述方法，其经历描述的效果也大相径庭。 ​ 3.用数字说话，不要说用户访问量大大提高，大大是多大？也不要说网页性能有了显著提高，有多显著？简历里的数字更能凸显个人亮点，吸引HR眼球，比如你自己封装了一个小插件，使你们项目进程提高了一周。 ​ 4.结果说话，想达到一份优秀简历的水平，你必须在简历中学会用客观的结果说话。这也就是在之前介绍工作实习经历描述中提到的“PAR法则”中的“R(Results)”，即结果，一般指业绩、成绩等。我们不仅要在简历中告诉HR，我们做过什么，而且通过描述我们做得怎么样，来向HR证明我们具备相关的素质、能力、经验。 ​ 5.真实性原则，没有必须要捏造一些四级或者六级或者一些证书，实事求是，我们干技术的，是凭借技术来征服的，证书只是锦上添花的事，不要为了提高简历的含金量去弄虚作假，但是我们可以适度的去活学活用，或者借鉴，比如，我面试的时候有人事问我，你大学当过学生会干部吗，我没当过，但是我宿舍哥们当过，那我是不是可以把他的经历说一下，这不叫欺骗，这是叫适度包装。 ​ 6.独特性原则，面试之前，我们应该考虑一下，我们比别人的优势在那里，同一个岗位，凭什么要你，不要别人？对于HR而言，对于简历中不同的履历，技能都能让HR眼前一亮，而这些比其他都东西更能让面试官记住你。 ​ 还有一点需要注意，创业经历，一般请适度表达，因为有时候会给面试官一些你不太稳定的感觉，所以问道这方面问题，请慎重回答，要让面试官知道你是一个安分守己的好员工。 10、优秀简历的特点言简意赅，强调成功的经验 简历内容要真实，重点突出 传递有效信息，使用有影响力词汇 突出自己技能，适当引用专业术语 11、简历和求职信有些公司比较喜欢自荐，这个时候最好写个求职信，求职信就是你找工作的时候，写给这家公司人事部对这个公司和这个岗位的一些看法，但是切忌指手画脚。一般自荐信建议手写，一百来字就可以，而在这百字之间你就要强调你很适合这个岗位。 求职信是针对个人来写的，简历是针对岗位来写的，而求职信更要突出个人的特征和求职意向，打动招聘者的心，求职信带有私人信件的性质，应有一定的感情色彩，行文要流畅，晓之以理，动之以情，既有说服力，又有感染力，让人相信你的资质，人品和能力。 12、求职信一般由三部分组成：开头、主体与结尾。 1、开头部分。包括称呼与引言。称呼一般是姓加职衔或官衔。一般以其高者尊者称呼。 2、主体部分。是求职信的重点，要简洁而有针对性地概述自己简历的内容。要突出自己的长处和优势，使对方觉得你的各方面情况与招聘条件相一致，与有关职位要求、特点相吻合。写作的具体内容，有关专家概括为如下5个方面： (1)简述你的主要求职资格、工作经验、参加过的有关社会活动、个人的兴趣和爱好。 (2)表述你具备的教育资历、工作经验和个人素质。①谈谈你为这项目标工作做了哪些教育准备，即你所受的哪些教育与目标工作的任职资格有关;②谈谈你过去所受的专业训练和工作经验以及和目标工作的相关性;③以事实证明你具有目标工作要求的个人素质;④举例说明你具有对做好目标工作的其他有利条件。 (3)要以成熟而务实的语气叙述。①切勿夸大其辞、自吹自擂;②提供你在学业上和工作中取得的重要成就，来证明所声言的资格和能力;③谈论一下目标单位的有关情况，表明你对其已有了解，并愿意为之效劳。 (4)重申你的求职动机，简要说明你对未来的设想。 (5)提示说明你在求职信后的有关附录或附件。 3、结语部分。要令人回味而记忆深刻。要把你想得到工作的迫切心情表达出来，请用人单位能尽快答复你，以恰当恳切的方式请求安排面谈。内容要具体简明，语气要热情，诚恳，有礼貌，别忘了向对方表示感谢。 求职信应该体现出自己的特色，在遵循上述一般原则的前提下，要开动脑筋，以自己的方式来赢得招聘者的青睐。​​ 求职信写作要求 求职信文字一定要简洁，字数最好不要超过1000字，它一般由几部分组成： 1)你所申请的职位和招聘信息来源; 2)表述你对该职位产生浓厚兴趣，并说明这种兴趣与你的理想追求或专长有关; 3)与申请职位有关的资历和经验和成绩都是非常重要的证明材料，说明你适合这个职位的原因; 4)表示如能得偿所愿，自信必能胜任此项工作; 5)提醒收信人留意你附呈的个人简历，并请求对方作进一步回应，如及早答复、予以安排面试等。 求职信的第一句话是最重要的，也是最难写的。其实有许多可取的写法，你可以说明是从什么渠道得知公司招聘信息，也可以叙述自己最有利的条件，不过最不稳妥的办法是参照广告的内容作自我介绍。第一句话(不包括称呼)的作用有二：一是吸引对方阅读你的信件;二是引导对方自然而然地进入你所突出的正题而不感到突然。 归纳起来，求职信的第一句话有以下几种形式： 1)概述式。用一句话概括你具备的最重要的求职资格和工作能力。 2)提名式。提及一为建议你到用人单位求职且为用人单位所熟悉和尊崇的人(记住连名带写上，后面可称呼其职衔或官衔，也可以称“先生”或“女士”)。 3)提问式。针对用人单位的需求和目标，提出一个设问，然后表示你真诚希望自己能够帮助他们实现目标。 4)赞扬式。赞扬用人单位近期取得的显著成就或发生的明显变化，然后表示渴望为其效力。但记住语气不要过度热情。 5)应征式。说明你通过什么途径看到用人单位的招聘广告，并肯定自己的条件基本满足广告提出的要求。 6)独创式。用一个新奇的、能表现你在某些方面才华的句子开头，但申请的职位必须是那种需要丰富想像力的类型，如广告文案、平面设计、装潢设计等。 13、如何让你的简历更加精彩1.回顾过去，表面目标，职业OR成就，还有最重要的事简历的格式，有些人连行间距字间距都不会调整。 2.放大你的卖点，在简历中需要求职意向要避免含糊笼统、毫无针对性。 在我们的求职意向中，我们应该体现出我们能为雇主做些什么，而不是雇主能给我们什么。 14、提高网申简历的投递技巧1.采用行业招聘网站求职 2.简历要与大公司沾边 3.经常刷新简历 4.不要只应聘最近三天的职位 5.让你的邮件永远在最前面 6.新颖的邮件标题 7.自己要学会让简历与职位匹配（不要太在乎对方职位要求的描述，很多职位描述只是写写，连经理都不知道要招什么样的人，如果你看到对方职位要求本科，你是专科就不敢投递简历，那就失去机会了。如果你看到对方要求有5年经验，你只有3年经验，你也不敢投，那完全没有必要。因为人事经理们对职位的描述只是例行公事随便写写而已，你千万不要当真！） 15、简历成功的要素1.态度端正，当你填写个人简历时，选一个可以静下心来的场所，梳理好自己的头绪：你要什么样的工作？你有什么样的优势？你有什么样的发展计划？而不是不经过思考简单将自己的经历和信息全部填进各种表格，让HR来判断你能做什么。你需要思考，提炼和总结，给出一个肯定和结论性的答案。像高考作文一样慎重对待你的简历，HR一定感受得到。 2.强调技能，把你的专业技能要表现出来，你会什么，用过什么，用什么技术点做过那些项目？ 16、简历中避免的错误1.打字或者语法错误，或者专业术语运用不当。 2.缺乏细节 3.没有用心，网上随便找一个简历改个名字就投递。 4.缺乏吸引的动词。 5.简历模版视觉上太花哨或者太low 6.联系方式错误，如果你的简历联系方式都错误，那你在工作种肯定也细心不到哪里去。 17、简历整体1234561.写好的简历，和同桌相互交换，检查已成文的个人简历，绝对不能出现错别字、语法和标点符号方面的低级错误。2.个人简历字体最好采用宋体或微软雅黑,尽量不要用花里呼哨的艺术字体和彩色字, 排版要简洁明快，切忌标新立异。3.简历一定要言简意赅，不用的信息不要写，而对你申请的工作有意义的经历和经验绝不能漏掉。4.你的个人简历越短越好（2-3页，最后一张不要弄个半页），招聘人不愿意花太多的时间阅读一篇冗长空洞的个人简历。5.你的个人经历顺序应该从现在开始倒过去叙诉，这样可使招聘单位在最短的时间内了解你最近的经历。6.在结构严谨的前提下，要使你的个人简历富有创造性，使阅读者能产生很强的阅读兴趣。 18、前端的职业技能展示（其实，你可以去招聘平台看公司的招聘要求，他要求会什么，你把自己会的技能点写上即可。） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151首先，你得精通这些技术单词的拼写吧！！！格式要统一，细节决定成败JavaScript、HTML、CSS、、jQuery、Zepto.jsHTML5、CSS3、移动Web、Ajax、BootStrap、LESS、SASS、CanvasJSON、JSONPRequireJS、SeaJSGrunt、GulpAngular.js、React.jsNode.js______________1.git属于分布式版本控制系统，是用于方便合作和版本控制的2.sublime是编辑器，类似于nodepad++,ultraEdit，是增强版的文本编辑器。3.sass和compass是css预处理器，可以变量、嵌套、混入(Mixin)、继承、导入、函数和操作符等，使css更具模块化和更加方便，基于ruby4.node是javascript的运行环境，基于google的V8 javascript引擎写的，可以将javascript扩展到服务器端。5.npm是包管理工具，类似的有bower，homebrew等（Bower – Js库依赖管理工具。当你需要jquery时，不需要手动下载，只需要执行 bower install jquery，自动安装依赖组件、组件依赖检测、版本兼容自动检测）6.gulp是自动化构建工具______________1.熟练使用HTML/CSS，能够书写符合W3C标准的页面，能够兼容主流浏览器，可以精确还原设计图.2.熟练使用JavaScript，可以脱离类库，用原生JS代码编写常见的网页特效，熟知DOM结构，可以实现代码优化，书写高质量代码3.熟练使用HTML5和CSS3相关技术开发手机等移动端和PC端前端应用;4.熟练使用jQuery库，了解Bootstrap进行网站开发,5.熟练使用zepto.js进行移动web开发；6.对Ajax交互、json和Jsonp交互有较好的理解和应用，了解http协议7.能够使用面向对象封装自己的框架，实现常用的功能，了解组件化开发，设计模式 8.熟练使用git、grunt/gulp对代码进行管理和构建，npm、bower等依赖管理工具；9.熟练使用angular熟悉MVC/MVVM框架模式；可以运用seajs，requirejs进行项目开发10.熟练使用ionic 进行移动app开发；11.可以运用seajs，requirejs进行项目开发，了解less、sass、React Native、node.js____________1.熟练使用HTML、CSS构建页面，有良好的代码编写能力，能精准还原符合3WC标准的页面。2.熟练使用JQuery和原生的JavaScript实现页面交互功能。3.掌握Ajax，能够实现前后端数据的交互，实现页面的异步加载。4.掌握并能够运用HTML5+CSS3的新功能。5.理解并掌握DOM、BOM、XML、JSON等。6.了解面向对象思想、能进行实际运用。7.了解bootstrap，能够用其搭建页面，实现响应式网站开发。8.了解node.js、angular.js，了解MVC思想。9.了解git、glup、npm等管理工具的使用方法。 ————————————熟练掌握html、div+css布局，手写符合w3c标准规范的页面代码；熟练javaScript，掌握常用的插件以提高工作效率。可根据项目需求用原生js写针对特定问题的库。熟练运用html5、css3进行移动端的页面开发。熟悉运用ajax技术处理后台数据，熟悉浏览器和服务器交互机制，依据接口文档与后台进行交互。熟悉js面向对象中的继承、封装、单体模式、工厂模式、原型模式等，坚持降低程序耦合度、提高代码复用性的设计理念，使代码高度模块化。能使用jQuery,bootstrap等框架实现轮播图等特效功能的加载机制，了解angularJS的相关应用;熟练使用sublime ，WebstromPhotoshop等开发工具————————————1.熟悉使用Fireworks、photoShop等软件切图并使用html与css精准还原设计稿并保持良好结构。2.熟悉javaScript并封装过小型类jQuery框架。3.可使用CSS3与HTML5实现3D旋转以及炫酷动画效果、熟悉canvas开发，能独立处理主流浏览器的兼容性问题。4.熟练使用JavaScript、jQuery，可以脱离类库，用原生JS代码编写常见的网页特效，并熟知DOM结构5.能熟练运用Ajax和模板引擎与后台进行数据交互，可利用JSONP实现跨域调取各个开放平台提供的API。6.有Bootstrap，requireJs，angularJs等前端主流框架的使用经验。7.熟悉NODE.js网络编程、MVC框架、MVVM框架，理解http基本原理，熟悉使用npm命令行工具及包管理工具开发项目并发布到npm生态圈。8.了解PHP基本API的使用，能与后台人员友好的交流。————————————1、 精通HTML和CSS ,能够书写语义合理、结构清晰、易维护的页面结构,高度还原设计图;2、 熟悉原生JavaScript ,完成页面交互和功能的实现 ,同时对jQuery能够熟练使用;3、 熟练使用HTML5和CSS3技术,熟悉bootstrap框架能够编写移动端网页制作和响应式布局 ,实现一个页面适配多种终端;4、 熟练掌握HTTP协议相关知识 、Ajax、php等相关技术,能够完成对页面的渲染,与后台开发人员一起完成交互程序;5、 熟悉面向对象编程、DOM编程;6、 对前端模块化开发有一定的了解 ,了解前端MVC框架、AngularJs;7、 可使用git管理代码;————————————1、掌握面向对象的特性，了解闭包、原型链、this等概念。2、掌握框架封装原理，能够通过原生的方式，对框架实现的基本理念有自己的理解；深刻理解移动App的开发模式和技术选型3、能够熟练使用前端工作流工具；4、理解MVC/MVVM设计思想，熟悉移动App的开发模式，能够基于流行的技术进行前端App开发；5、熟悉nodejs的全栈式解决方案，能够根据业务需求在众多框架中进行技术选型；6、熟悉软件开发中整个项目的生命周期，了解主流的后台开发技术以及相应的前后端协作方式。7、掌握前端MVC/MVVM框架实现机制，通过angularjs的实践深刻理解MVC的开发模式，理解双向数据绑定等相关概念。8、掌握移动端混合开发模式，通过ionic/angular的结合，理解使用html5css3/js实现APP开发的整体流程和实现机制。9、掌握移动端ReactNative的开发模式，通过实例展示框架在app开发上的独特之处。————————————1. 熟练使用HTML/CSS，能够书写符合W3C标准的页面，能够兼容主流浏览器，可以精确还原设计图；2. 熟悉W3C标准与ES规范，编写易读、易维护、高质量、高效率的代码；3. 熟练使用JavaScript，可以脱离类库，用原生JS代码编写常见的网页特效，熟知DOM结构，可以实现代码优化，书写高质量代码； 4. 掌握jquery、zepto库的使用；5. 熟悉Angular 框架，熟悉MVC/MVVM框架模式； 6. 熟悉AJAX、JSON数据处理机制，了解前后端的交互；7. 擅长HTML5，CSS3方面的应用，熟悉移动端开发，对手机终端的适配问题可以解决；8. 理解MVC/MVVM设计思想 ，了解HTTP网络通信协议；9. 热衷于web开发技术，对node有一定的使用经验；10.熟练使用git、github/gutlub对代码进行管理和构建，npm、bower等依赖管理工具；11.能够使用面向对象封装自己的框架，实现常用的功能，了解组件化开发———————————1、熟练掌握HTML、CSS等网页布局技术，能熟练运用DIV+CSS来制作静态页面。2、熟练掌握JavaScript技术，能用原生js封装特定功能模块。3、熟练掌握jQuery库，能够熟练运用jQuery API实现网页特效。4、熟练运用CSS3、HTML5制作炫酷的页面特效。5、掌握angular等流行框架的使用，充分了解了angularjs的双向数据绑定，路由，模块化，依赖注入等功能。6、熟悉ajax、Json实现页面的异步加载及前后端数据处理机制，了解前后端数据的交互机制能够熟练使用bootstrap模板，制作响应式网页。7、熟悉了解MVC的设计模式，了解HTTP网络通信协议。8、热衷于前端开发工作，对nodejs有一定的使用与了解。————————————1.熟练使用HTML,CSS构建页面，有良好的代码编写习惯2.理解并掌握DOM,BOM,XML,JSON3.熟练使用JavaScript实现动态网页的交互，熟练jQuery框架完成各项工作4.掌握Ajax技术，能够实现前后端的数据交互，实现页面的异步加载5.熟练运用CSS3的新特性，熟悉HTML5的新功能6.了解面向对象思想，并且能实际运用7.精通bootstrap，能够搭建页面实现响应式网站开发8.精通angularJS框架，了解MVC思想，实现todo单页面应用案例9.了解git gulp npm等管理工具的使用——————————————————1. 精通html,css,可合理利用语义化标签搭建结构清晰，易于维护的页面；2. 能够处理主流浏览器兼容性问题3. 熟练掌握原生JavaScript，能够熟练进行页面交互功能实现。4. 掌握 webstroms, sublime, photoshop， fireworks等开发软件的使用； 5. 熟练html5与css3 ;6. 熟练掌握Ajax，json等技术，实现与后台交互，实现页面异步数据加载；7. 熟悉面向对象编程,可进行常用功能插件开发；8. 了解git、npm等管理工具的使用方法;9. 拥有较强的学习能力和理解能力，能够独立解决和分析问题————————————————1.熟练使用html，css构建静态页面，有良好的代码注释和编写习惯2.熟练使用JQuery和原生Javascript实现页面特效和交互功能3.掌握Ajax，能实现前后端数据的交互，实现页面数据的异步加载4.掌握并能运用html5和CSS3的新功能5.了解面向对象思想，能运用于实际编程中6.了解bootstrap，能够用其搭建响应式网站7.了解git，gulp管理工具的使用8.了解nodejs后端基础，了解MVC思想，实现增删改查的网页应用9.掌握Photoshop使用，能完成成简单的设计任务————————————————————1.熟练使用HTML/CSS制作目标网页，并能做好主流浏览器的兼容性，能够使用HTML5和CSS3开发移动端、PC端页面应用；2.熟练使用JavaScript，可脱离类库，编写原生JS代码实现网页特效，并能进行代码优化；3.熟练运用jQuery实现常用网页特效，掌握Bootstrap进行响应式网站开发，了解Zepto.js进行移动web开发；4.理解并能应用Ajax交互，以及JSON/JSONP以及http协议；5.能够使用面向对象封装自己的框架，实现常用功能，了解组件化开发；6.能够使用git/gulp对团队代码进行管理和构建，了解npm、bower等包依赖管理工具；7.熟练使用angular开发，熟悉MVC框架模式，了解Node.js开发；——————————————————1.熟练DIV+CSS网页制作技术，熟悉W3C各标准，能根据设计图制作符规范的静态页面。2.熟悉jQuery框架，熟练掌握JQuery、DOM操作及事件处理，了解动态绑定事件的原理。3.熟练掌握HTML5+CSS3的新特性，并熟练应用到移动页面开发中以及能解决大部分浏览器兼容问题。4.熟练CSS3动画、过渡效果展示以及Cavas动画制作并实现页面交互。5.有基于Ajax的应用开发经验，DOM、BOM、JSON等相关技术，能与后台开发协作，完成操作交互、数据展示。6.能够使用Zepto、iScroll swape等技术构建页,了解面向对象编程思想。7.熟悉弹性布局及响应式布局，自适应，能有效解决和改善各种移动端的适配问题。也了解一些后端语言PHP、sql8.了解一些前端框架如：Bootstrap、Zepto、Less、流行框架等。9.了解模块化开发思想可用node.js，Seajs、Requirejs及Angularjs进行简单的模块化开发。 后期有时间了会持续细化和整理，面试的经验分享敬请期待、 备注： 1前端的路上我们一起携手共进！如果转载，请标注本链接地址。 ​MIT ©杨方涛 Email:58267980@qq.com","categories":[{"name":"面试宝典","slug":"面试宝典","permalink":"https://lzws0931.cn/categories/面试宝典/"}],"tags":[{"name":"面试","slug":"面试","permalink":"https://lzws0931.cn/tags/面试/"}]},{"title":"付费_极客时间one","slug":"法门扫地僧付费_极客时间one","date":"2018-08-07T11:43:32.000Z","updated":"2018-11-05T09:00:10.551Z","comments":true,"path":"2018/08/07/法门扫地僧付费_极客时间one/","link":"","permalink":"https://lzws0931.cn/2018/08/07/法门扫地僧付费_极客时间one/","excerpt":"","text":"极客时间_one本文来自极客时间个人记录笔记。 任何工作不能是“我的部分做完了，其他的事情我不管”… 验证码有可能是个有效设计，但是他并不是一个好设计，因为挡住机器这件事本应该是服务提供方的责任，而服务方却将其成本转嫁给了用户 未完成的功能键要想加入一个新的功能，为了测试用户是否真的想对这个功能感兴趣，暂时不设置功能，而是通过用户的点击率看来验证用户的动机和需求。。 用最少的资源给你的产品试试水。","categories":[{"name":"技术","slug":"技术","permalink":"https://lzws0931.cn/categories/技术/"}],"tags":[{"name":"产品","slug":"产品","permalink":"https://lzws0931.cn/tags/产品/"}]},{"title":"‘一页尽览’体验第二版","slug":"‘一页尽览’体验第二版本","date":"2018-07-22T06:03:32.000Z","updated":"2018-07-22T06:10:24.284Z","comments":true,"path":"2018/07/22/‘一页尽览’体验第二版本/","link":"","permalink":"https://lzws0931.cn/2018/07/22/‘一页尽览’体验第二版本/","excerpt":"","text":"腾讯‘一页尽览’产品体验心得第二版因为自己是通过word提交给腾讯的产品的，所以没有写md文档，有点小麻烦，所以把内容通过预览截图的方式上次到了七牛云。","categories":[{"name":"技术","slug":"技术","permalink":"https://lzws0931.cn/categories/技术/"}],"tags":[{"name":"产品","slug":"产品","permalink":"https://lzws0931.cn/tags/产品/"}]},{"title":"‘一页尽览’产品体验","slug":"腾讯‘一页尽览’产品体验","date":"2018-07-17T02:26:32.000Z","updated":"2018-11-05T09:01:11.047Z","comments":true,"path":"2018/07/17/腾讯‘一页尽览’产品体验/","link":"","permalink":"https://lzws0931.cn/2018/07/17/腾讯‘一页尽览’产品体验/","excerpt":"","text":"腾讯‘一页尽览’产品体验心得因为自己是通过word提交给腾讯的产品的，所以没有写md文档，有点小麻烦，所以把内容通过预览截图的方式上次到了七牛云。","categories":[{"name":"技术","slug":"技术","permalink":"https://lzws0931.cn/categories/技术/"}],"tags":[{"name":"产品","slug":"产品","permalink":"https://lzws0931.cn/tags/产品/"}]},{"title":"浏览器渲染原理(本文转载)","slug":"浏览器渲染原理","date":"2018-05-10T05:51:00.000Z","updated":"2018-05-10T06:13:19.873Z","comments":true,"path":"2018/05/10/浏览器渲染原理/","link":"","permalink":"https://lzws0931.cn/2018/05/10/浏览器渲染原理/","excerpt":"","text":"从输入 URL 到页面加载完成发生了什么事DNS解析 TCP连接 发送HTTP请求 服务器处理请求并返回HTTP报文 浏览器解析渲染页面 浏览器应该有的功能网络;资源管理;网页浏览;多页面管理;插件与管理;账户和同步;安全机制;开发者工具 浏览器的主要功能总结起来就是一句话: 将用户输入的url转变成可视化的图像 浏览器的内核(渲染引擎)在浏览器中有一个最重要的模块，它主要的作用是将页面转变为可视化的图像结果。这个模块就是浏览器内核，通常它也被称为渲染引擎。 IE-----&gt;Trident Safari------&gt;WebKit Chrome;Opera-----&gt;Blink Firefox------&gt;Gecko 渲染引擎一个渲染引擎主要包括：HTML解析器，CSS解析器，布局layout模块，javascript引擎，绘图模块 渲染过程1.网页URL到构建DOM树的整个过程 1) 当用户输入URL的时候，Webkit调用资源加载器加载URL对应的网页 2) 加载器依赖网络模块建立连接，发送请求并接收答复 3) Webkit接收到各种网页或者资源的数据，其中某些资源可能是同步的或异步获取的 4) 网页被交给HTML解析器转变一系列的词语（Token） 5) 解析器根据词语构建节点（node），形成DOM树 6) 如果节点需要依赖于其他资源， 例如js css 图片 视频等，调用资源加载器来加载他们，但是这些都是异步的， 不会阻碍dom树的继续创建；顺序执行 并发加载 如果资源是css的话 调用CSS解析器解释将CSS解释成内部表示结构(CSSDOM) 如果资源是javascript的话 调用Javascript引擎解释并执行， 7）阻塞 css阻塞 css 在head中通过link的形式引入会阻塞页面的渲染 为什么？ 避免闪屏现象 js阻塞 直接引入的js会阻塞页面的渲染 为什么？ Javascript代码可能会修改DOM树的结构 8) 预解析 WebKit 和 Firefox 都进行了这项优化。在执行js脚本时，其他线程会解析文档的其余部分，找出并加载需要通过网络加载的其他资源。通过这种方式，资源可以在并行连接上加载，从而提高总体速度。请注意，预解析器不会修改 DOM 树，而是将这项工作交由主解析器处理； 预解析器只会解析外部资源（例如外部脚本、样式表和图片）的引用。 2.从DOM树到可视化图像 1) CSS文件被CSS解析器解释成内部表示结构(CSSDOM) 2) CSS解析器工作完成之后，在DOM树上附加解释后的样式信息，这就是RenderObject树 3) RenderObject在创建的同时，Webkit会根据网页的结构创建RenderLayer，同时构建一个绘图上下文 4) 根据绘图上下文生成最终的图像（这一过程需要依赖图形库） 3.上面介绍的是一个完整的渲染过程，但现代网页很多都是动态的，这意味着在渲染完成之后，由于网页的动画或者用户的交互， 浏览器其实一直在不停地重复执行渲染过程。（重绘重排），以上的数字表示的是基本顺序，这不是严格一致的， 这个过程可能重复也可能交叉。浏览器是一个边解析边渲染的过程 css图层浏览器在渲染一个页面时，会将页面分为很多个图层，图层有大有小，每个图层上有一个或多个节点。 在渲染DOM的时候，浏览器所做的工作实际上是： 1. 获取DOM后分割为多个图层 2. 对每个图层的节点计算样式结果 （Recalculate style--样式重计算） 3. 为每个节点生成图形和位置 （Layout--重排,回流） 4. 将每个节点绘制填充到图层位图中 （Paint--重绘） 5. 图层作为纹理上传至GPU 6. 符合多个图层到页面上生成最终屏幕图像 （Composite Layers--图层重组） 图层创建的条件Chrome中满足以下任意情况就会创建图层： 1. 拥有具有3D变换的CSS属性 2. 使用加速视频解码的&lt;video&gt;节点 3. &lt;canvas&gt;节点 4. CSS3动画的节点 5. 拥有CSS加速属性的元素(will-change) 6. 元素有一个z-index较低且包含一个复合层的兄弟元素（换句话说就是该元素在复合层上面渲染） 重绘(Repaint)重绘是一个元素外观的改变所触发的浏览器行为，例如改变outline、背景色等属性。浏览器会根据元素的新属性重新绘制， 使元素呈现新的外观。重绘不会带来重新布局，所以并不一定伴随重排。 需要注意的是，如果图层中某个元素需要重绘，那么整个图层都需要重绘。 比如一个图层包含很多节点，其中有个gif图，gif图的每一帧，都会重回整个图层的其他节点，然后生成最终的图层位图。 所以这需要通过特殊的方式来强制gif图属于自己一个图层（translateZ(0)或者translate3d(0,0,0) CSS3的动画也是一样（好在绝大部分情况浏览器自己会为CSS3动画的节点创建图层） 重排(Reflow 回流)渲染对象在创建完成并添加到渲染树时，并不包含位置和大小信息。计算这些值的过程称为布局或重排 &quot;重绘&quot;不一定需要&quot;重排&quot;，比如改变某个网页元素的颜色，就只会触发&quot;重绘&quot;，不会触发&quot;重排&quot;，因为布局没有改变。 但是，&quot;重排&quot;必然导致&quot;重绘&quot;，比如改变一个网页元素的位置，就会同时触发&quot;重排&quot;和&quot;重绘&quot;，因为布局改变了。 触发重绘的属性* color * background * outline-color * border-style * background-image * outline * border-radius * background-position * outline-style * visibility * background-repeat * outline-width * text-decoration * background-size * box-shadow 触发重排(回流)的属性盒子模型相关属性会触发重布局 定位属性及浮动也会触发重布局： 改变节点内部文字结构也会触发重布局： * width * top * text-align * height * bottom * overflow-y * padding * left * font-weight * margin * right * overflow * display * position * font-family * border-width * float * line-height * border * clear * vertival-align * min-height * white-space 常见的触发重排的操作Reflow 的成本比 Repaint 的成本高得多的多。DOM Tree 里的每个结点都会有 reflow 方法， 一个结点的 reflow 很有可能导致子结点，甚至父点以及同级结点的 reflow。在一些高性能的电脑上也许还没什么， 但是如果 reflow 发生在手机上，那么这个过程是非常痛苦和耗电的。 所以，下面这些动作有很大可能会是成本比较高的。 当你增加、删除、修改 DOM 结点时，会导致 Reflow , Repaint。 当你移动 DOM 的位置 当你修改 CSS 样式的时候。 当你 Resize 窗口的时候（移动端没有这个问题） 当你修改网页的默认字体时。 获取某些属性时(width,height...) 注：display:none 会触发 reflow，而 visibility:hidden 只会触发 repaint，因为没有发生位置变化。 优化如果我们需要使得动画或其他节点渲染的性能提高，需要做的就是减少浏览器在运行时所需要做的工作（减少1234中的步骤） 1. 计算需要被加载到节点上的样式结果（Recalculate style--样式重计算） 2. 为每个节点生成图形和位置（Layout--回流和重布局） 3. 将每个节点填充到图层中（Paint Setup和Paint--重绘） 4. 组合图层到页面上（Composite Layers--图层重组） 1.元素位置移动变换时尽量使用CSS3的transform来代替对top left等的操作 变换（transform）和透明度（opacity）的改变仅仅影响图层的组合 2.使用opacity来代替visibility 透明度竟然不会触发重绘？ 透明度的改变时，GPU在绘画时只是简单的降低之前已经画好的纹理的alpha值来达到效果，并不需要整体的重绘。 不过这个前提是这个被修改opacity本身必须是一个图层，如果图层下还有其他节点，GPU也会将他们透明化 3.不要使用table布局 4.将多次改变样式属性的操作合并成一次操作 不要一条一条地修改DOM的样式，预先定义好class，然后修改DOM的className 5.将DOM离线后再修改 由于display属性为none的元素不在渲染树中，对隐藏的元素操作不会引发其他元素的重排。 如果要对一个元素进行复杂的操作时，可以先隐藏它，操作完成后再显示。这样只在隐藏和显示时触发2次重排。 6.利用文档碎片 7.不要把某些DOM节点的属性值放在一个循环里当成循环的变量 当你请求向浏览器请求一些 style信息的时候，就会让浏览器flush队列，比如： 1. offsetTop, offsetLeft, offsetWidth, offsetHeight 2. scrollTop/Left/Width/Height 3. clientTop/Left/Width/Height 4. width,height 当你请求上面的一些属性的时候，浏览器为了给你最精确的值，需要flush队列， 因为队列中可能会有影响到这些值的操作。即使你获取元素的布局和样式信息跟最近发生或改变的布局信息无关， 浏览器都会强行刷新渲染队列。 8.动画实现过程中，启用GPU硬件加速 9.为动画元素新建图层,提高动画元素的z-index","categories":[{"name":"技术","slug":"技术","permalink":"https://lzws0931.cn/categories/技术/"}],"tags":[{"name":"浏览器","slug":"浏览器","permalink":"https://lzws0931.cn/tags/浏览器/"}]},{"title":"成都三日游","slug":"法门扫地僧成都三日游","date":"2018-04-26T05:21:00.000Z","updated":"2018-04-26T07:15:22.670Z","comments":true,"path":"2018/04/26/法门扫地僧成都三日游/","link":"","permalink":"https://lzws0931.cn/2018/04/26/法门扫地僧成都三日游/","excerpt":"","text":"我一个人去成都逛了一圈123嗯，带的班结课了。不到一周，就业率70%，挺好的。都是大家努力的成果。希望最后大家都能百分百就业吧，拿到自己期望的工资。不过，有好些人上班了，也有不少压力，感觉掌握的东西还是比较欠缺，知识面窄，还有就是掌握的深度不够到位，慢慢熬吧。都一样，知识永远也学不完呀。趁着周末没事干，我觉得来一场说走就走的旅行，哈哈，成都一圈。散散心。 晒一波照片。哈哈，其实我拍了好多，这里只是晒部分，因为之前有次上次的照片看不到了，估计是之前的图床发生故障了。所以以后的照片上传到七牛云上去了。自己摸索的。啦啦 成都一个小哥哥让我很暖4月21日，成都，小雨因为雨不是很大，我就没打伞，有时候还是很享受在雨中漫步的感觉。然后，过马路，等红灯，旁边一个小哥哥。穿着西装，长的有点像最强大脑里面的王峰。看我没打伞，然后把伞往我这边靠了一下，说“躲躲雨”瞬间，我就被暖到了。陌生的城市，一个小小的举动。一看就是有素养的人然后他在回微信。过了马路走了一段路，我说我朝这边走，他说，那不好意思了。不能帮你了。我说谢谢。 感谢，一个人让我改变了一座城的看法。","categories":[{"name":"旅游","slug":"旅游","permalink":"https://lzws0931.cn/categories/旅游/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://lzws0931.cn/tags/生活/"}]},{"title":"路径并不像你想的那么简单","slug":"路径并不像你想的那么简单","date":"2018-04-08T06:21:00.000Z","updated":"2018-04-08T06:51:07.539Z","comments":true,"path":"2018/04/08/路径并不像你想的那么简单/","link":"","permalink":"https://lzws0931.cn/2018/04/08/路径并不像你想的那么简单/","excerpt":"","text":"相对路径，绝对路径？ 之前在通过demo学习相对路径和绝对路径的时候，感觉路径是很简单的知识点。相对，不就是相对于某一个东西而言的位置，绝对，不就是写死的路径么。可是，当把这些点放在项目里面的时候我才绝的并不简单。 相对路径-以引用文件之网页所在位置为参考基础，而建立出的目录路径。因此，当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对。 绝对路径-以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的。 每个文件／文件夹都只有一个绝对路径，无数个相对路径有一天，Cherry在路上遇到Sunkist，它问Sunkist的公司地址在哪里，Sunkist可能有两个答案：以这里为起点，西南方向500米的石室大厦中国广东省广州市思哲路石室大厦 第一个答案以当前的位置为起点所描述的称为相对路径。根据Sunkist当前的位置不一样，它回答的相对路径会不一样. 第二个答案从国家到省份城市巨细无遗地描述称为绝对路径，一个文件除非被移动，否则绝对路径是不会变化的。 每个文件/文件夹在一台计算机中可能会有无数个相对路径，但是只有一个绝对路径。（此demo引自）engine 如何表示上级目录../表示源文件所在目录的上一级目录，../../表示源文件所在目录的上上级目录，以此类推。 如何表示下级目录引用下级目录的文件，直接写下级目录文件的路径即可。1&lt;a href=&quot;adminwang/bbb.html&quot;&gt;链接bbb网页&lt;/a&gt;","categories":[{"name":"知识分享","slug":"知识分享","permalink":"https://lzws0931.cn/categories/知识分享/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://lzws0931.cn/tags/前端/"}]},{"title":"从一个人的社交圈看不到什么有用信息！","slug":"感谢","date":"2018-04-06T14:56:00.000Z","updated":"2018-04-06T15:09:51.263Z","comments":true,"path":"2018/04/06/感谢/","link":"","permalink":"https://lzws0931.cn/2018/04/06/感谢/","excerpt":"","text":"心里很不舒服 之前心里很不舒服还是几年前。 几年之前呢？ 13年还是16年？ 具体的时间我已经忘记了。。但是却非常不愿意有这种滋味。 感觉身上发冷，是由内而外的冷。 我不喜欢把自己内心的东西发布在任何一个社交平台，包括这里 不希望被别人看透彻，不希望被别人知道，这里一下，哪里一下。不要把任何个人的情绪波动表露出来，这就是缺乏安全感吧，只能相信自己。 这个博客是自己搭建起来的，像我的微博一样，自己养活那么大，真让我卖，还真舍不得。 偶尔矫情一下，还是有必要的。 大家都懂，感谢你。 小太阳","categories":[{"name":"生活琐事","slug":"生活琐事","permalink":"https://lzws0931.cn/categories/生活琐事/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://lzws0931.cn/tags/生活/"}]},{"title":"对于前后端分离的了解","slug":"对于前后端分离的了解","date":"2018-03-21T02:21:00.000Z","updated":"2018-03-21T02:51:13.123Z","comments":true,"path":"2018/03/21/对于前后端分离的了解/","link":"","permalink":"https://lzws0931.cn/2018/03/21/对于前后端分离的了解/","excerpt":"","text":"前后端分离、 本文来源我在慕课网学习时候看到笔记整理 https://www.imooc.com 什么叫前后端分离？ 前后端分离就是后端不再直接返回html， 直接返回数据，当然数据格式可以自己指定比如xml， json、yml都是可以的， html页面由前端去填充这些数据到dom中。 随着前后端技术的更新，越来越多的前端框架进入开发者们的视野，网站的前后分离架构越来越得到开发者们的喜爱与认可。 后端只提供数据接口、业务逻辑与持久化服务，而视图、控制与渲染则交给前端。 因此，越来越多的网站从后端渲染变成了前端渲染，前后端分离意味着后端可以不用去了解前端的代码， 前端不用学习后端的模板语法， 前后端不需要等到对方做好了才能调试了， 尽量在保证自己端的代码写好以及少bug， 这样在后期真正联调的时候就可以尽量避免bug了，而且前后端分离还意味着pc端、app、后台管理系统等各种系统可以尽量多的共用接口了。 什么时候选择前后端分离的开发模式？ 在开发过程中相信大家经常会遇到一个问题， android端、ios端、pc端、 后台管理系统如果使用传统的mvc开发模式， 只要页面不一样 我们都得给对应的系统写一套后台， 而且很多页面还需要后端去填充数据到html中、 但是前后端分离的开发模式我们只需要把接口写好， 其余都不用管让前端去协调各个接口之间如何配合。这种模式最大的好处就是适应性很强。 当然还有个很大的好处就是前端不用再等待将页面写好了然后交给后端， 然后后端再将代码改成模板语言了， 当然如果前端熟悉后端模板语法， 后端当然就很喜欢了， 但是前端往往不愿意去学习后端的模板语法，更喜欢用前端自己的模板语法。 前后端分离解决了这个问题 但是Restful api还是有缺点， 最大的问题就是seo， 爬虫爬不到， 百度就会给你降权， 对于那种需要流量的网站来说，这个是不太接受的， 所以后面就有了ssr技术， 在服务器端渲染好静态页面直接给前端， 这篇爬虫就能爬取到了， 而且有些系统比如内部系统或者后台管理系统这种根本就不在乎seo的直接就用restful api开发就行了。 除了上面的问题以外还有就是数据格式依赖严重， 如果后端改了某个字段的名称， 前端也得跟着改， 在以前这种改动后端自己就可以一个人完成，但是分离之后得前端去改了， 如果返回格式变了，前端变动更大。 还有就是文档变得很重要了我们得去维护文档了，因为前后端分离脱离了文档，后期想维护能麻烦死。 前后端分离开发 跨域问题 我们现在有个二次开发的项目，要求前后端分离开发，前端我用webpack-dev-server本地服务，要请求java后台tomact下数据，我要处理跨域请求的问题，jsonp肯定是不行了，后台代码基本已经确认了，我想问如何让后台做的少更改的情况下，前端这边需要做什么配置来解决跨域问题。 想问一些关于前后端分离开发的问题。因为第一次开发有很多地方不清楚，上网查了很多资料现在似懂非懂，基本上就开发环境下的跨域问题是前端后后台一起解决，还是只用前端解决。（网上说是一起解决，但我后台的同事也没有接触过，他们以前都是javaweb项目，也不太懂），第二就是后期部署时前端和后台是不是分开部署服务器，可以部署在同一个服务器上吗。 要么单独写jsonp的接口，要么后台设置cors。开发环境下，你可以使用webpack的代理，用你启动的node服务代理请求访问java的接口然后把结果返回给你，但是生产环境下必须要后端的配合，要么jsonp, 要么设置cors，前端是无法解决的！设置cors是改动成本最低的方式 Node.js覆盖哪些领域？有没有值得玩的？ 理论上 Node 运行在服务器，后端能做的 Node 都能做，但是有几个擅长的领域前端本地代码构建、打包：webpack、gulp、babel 等前端单元测试 &amp; UI 测试：mocha、kama、jest、puppeteer 等视觉渲染为核心的 web 站点：koa、express企业级 web 框架 egg爬虫 puppeteer桌面程序开发 node-webkit、electron比较好玩的应该是爬虫和啄米昂程序开发，但工作最常用的是本地代码构建、打包 &amp; web 请问一下，在公司里从事前端和后端的人是如何配合的？在前后端分离的情况下，后端同学的任务是把数据和文件做持久化存储，并提供操作数据数据的接口。前端同学负责请求数据，然后对数据做处理和适配，最后再把数据呈现出来。其实就是以接口为界限，后端负责接口的制作，前端负责接口的调用。 在实际开发中，一般是前后端同学拿到需求后，一起来确定各个功能点需要的接口，然后再逐个细化出各个接口的输入输出字段，最后由后端同学生成一个接口文档。 模块化为什么可以提高开发效率？1.对代码进行封装隔离，提高代码的复用性，就能减少代码量2.通过逐级对业务的拆解，达到简化业务的作用，降低系统复杂度3.更好的代码组织方式，能支持团队并行开发，提高团队的效率4.封闭作用域，减少变量冲突带来的不太容易发现的问题5.耦合小，利于后期扩展和修改，降低系统的后期维护成本 开发环境：开发环境是程序猿们专门用于开发的服务器，配置可以比较随意，为了开发调试方便，一般打开全部错误报告。 测试环境：一般是克隆一份生产环境的配置，一个程序在测试环境工作不正常，那么肯定不能把它发布到生产机上。 生产环境：是值正式提供对外服务的，一般会关掉错误报告，打开错误日志。 三个环境也可以说是系统开发的三个阶段：开发-&gt;测试-&gt;上线，其中生产环境也就是通常说的真实环境。","categories":[{"name":"前后分离","slug":"前后分离","permalink":"https://lzws0931.cn/categories/前后分离/"}],"tags":[{"name":"工作流","slug":"工作流","permalink":"https://lzws0931.cn/tags/工作流/"}]},{"title":"我的技术博客终于完成了！","slug":"我的技术博客终于完成了","date":"2018-03-19T13:52:00.000Z","updated":"2018-03-19T15:18:55.427Z","comments":true,"path":"2018/03/19/我的技术博客终于完成了/","link":"","permalink":"https://lzws0931.cn/2018/03/19/我的技术博客终于完成了/","excerpt":"","text":"经过了一周的努力，我的技术博客完成了其中我收获颇多。虽然我用的是hexo第三方的主题，但是我修改了里面不少的结构样式其中踩到很多的坑。由于主题用的是ejs模版，不是很熟悉，导致刚开始的时候结构和样式比较混乱。经过一天的查询资料以及了解根据文件命名的了解大体对文件有了初步认识。 其中博客里面还自主插入了网易云音乐,QQ聊天,微博秀等第三方的插件，特别是在微博秀的时候，对http和https有了更深刻的认识。 在最后显示博文的标题图片的时候，也遇到了bug,然后自己也获得了解决。由于刚开始没有重点去用笔记的形式记这些内容，所以只是在自己的印象笔记里面有了一些关键词的笔记。后期如果学习和做项目的过程中，希望能发挥出我自己这个技术博客的作用。 哦，对了，最后由于觉得用hexo的命令行发布博文太麻烦，又找到了一个hexo/admin的插件可以使用，大大的方便了后面对博文的编辑。而且我的MD编辑的语法不是很熟悉，后面会对此进行加强练习。 域名正在备案中，等备案成功了，我就终于完成了一个小梦想。最近在做这个网站的时候我竟然觉得自己慢慢喜欢上看技术。以前可是从来没有这样的感觉。 上线以后再对网站进行SEO优化吧，让百度多抓抓、、或许别人觉得这个网站很简单，比较丑但是这就是提高。脚踏实地的提高。接下来就是给七期就业了。加油。⛽️","categories":[{"name":"博客制作","slug":"博客制作","permalink":"https://lzws0931.cn/categories/博客制作/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://lzws0931.cn/tags/生活/"}]},{"title":"关于https不支持http的解决方案","slug":"关于https不支持http的解决方案","date":"2018-03-18T16:21:00.000Z","updated":"2018-03-21T02:28:03.403Z","comments":true,"path":"2018/03/19/关于https不支持http的解决方案/","link":"","permalink":"https://lzws0931.cn/2018/03/19/关于https不支持http的解决方案/","excerpt":"","text":"由于在写md的时候截图是用的微博的图床，上传到github才发现不让在其他网站使用，所有本文只有一张图片。 刚才进行网站测试的时候，微博秀这个插件不能显示出来，一直是空白，然后我把本地域名改成了127.0.0.1，显示出来了。可是部署到github以后还是显示空白，我以为是网络问题，但是检查了一下才发现报错了。 1Mixed Content: The page at ‘https://www.taobao.com/‘ was loaded over HTTPS, but requested an insecure image ‘http://g.alicdn.com/s.gif’. This content should also be served over HTTPS. 查了一下原因，显示说是现在的github是https协议了。而微博秀还是http的协议，然后通过了解可以通过ssl进行解决。但是有点麻烦，然后，我又经过查找资料。 把微博秀里面的http去掉了。写成了类似相对路径的形式。 并且查到可以在页面中加入（meta）头，为了以防万一，我进行了这两个步骤，然后部署后成功显示1&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;upgrade-insecure-requests&quot; /&gt; 正常显示了微博秀","categories":[{"name":"网站上线","slug":"网站上线","permalink":"https://lzws0931.cn/categories/网站上线/"}],"tags":[{"name":"HTTP","slug":"HTTP","permalink":"https://lzws0931.cn/tags/HTTP/"}]},{"title":"法门扫地僧的第一篇博文","slug":"hello-world","date":"2018-03-15T16:21:00.000Z","updated":"2018-03-19T13:54:23.732Z","comments":true,"path":"2018/03/16/hello-world/","link":"","permalink":"https://lzws0931.cn/2018/03/16/hello-world/","excerpt":"","text":"Welcome to Hexo! 纪念1234567经过三天的踩坑，走弯路，我终于把自己的技术博客搭建起来了，本博客用的是 hexo+github page 搭建起来的。买了两个域名，目前正在备案中，等审核通过，那么我就正式拥有自己的个人博客了，还没规划好做什么类型网站，等有想法初成，一定打造好自己的小窝！ 对MD文档的书写规范还不是很熟练，慢慢摸索，慢慢成长。感谢miho主题开源者: MinHow我在原来模版基础之上进行了DIY部分修改。 感谢您的到访。","categories":[{"name":"博客制作","slug":"博客制作","permalink":"https://lzws0931.cn/categories/博客制作/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://lzws0931.cn/tags/生活/"}]}]}